// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoItemApi.Contexts;

namespace TodoItemApi.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20210406033338_FieldsWhenEntitiesDeletedAdded")]
    partial class FieldsWhenEntitiesDeletedAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TodoItemApi.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Deleted");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A great place to live",
                            IsDeleted = false,
                            Name = "Boston"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Capital of the world",
                            IsDeleted = false,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The wind city",
                            IsDeleted = false,
                            Name = "Chicago"
                        });
                });

            modelBuilder.Entity("TodoItemApi.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Deleted");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Home of Boston Red Sox",
                            IsDeleted = false,
                            Name = "Fenway Park"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Description = "Home of New York Yankees",
                            IsDeleted = false,
                            Name = "Yankee Stadium"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Description = "Home of Chicago White Sox",
                            IsDeleted = false,
                            Name = "U.S. Cellular Field"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "Home of New York Mets",
                            IsDeleted = false,
                            Name = "Citi Field"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Home of Chicago Cubs",
                            IsDeleted = false,
                            Name = "Wrigley Field"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 2,
                            Description = "A great place for a walk",
                            IsDeleted = false,
                            Name = "Brooklyn Bridge"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 1,
                            Description = "Best College of the world",
                            IsDeleted = false,
                            Name = "Harvard University"
                        });
                });

            modelBuilder.Entity("TodoItemApi.Entities.PointOfInterest", b =>
                {
                    b.HasOne("TodoItemApi.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TodoItemApi.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
